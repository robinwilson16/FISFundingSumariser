/*
DECLARE @AcademicYear VARCHAR(5) = '18/19'
DECLARE @Provider INT = 10001475
DECLARE @ILRReturn DATETIME2 = '2019-05-07 10:48:41'
DECLARE @FundLine VARCHAR(20) = ''
DECLARE @Team VARCHAR(20) = ''
*/

SELECT
	FD.AcademicYear,
	FD.ILRReturn,
	FD.ILRReturnDate,
	FD.SQLDatabase,
	FD.FundLineSummary,
    FD.FundLineDetail,
	SortOrder = MIN ( FD.SortOrder ),
	Target = SUM ( FD.Target ),
	Learners = SUM ( COALESCE ( CNT.Learners, 0 ) ),
	Enrols = SUM ( COALESCE ( CNT.Enrols, 0 ) ),
	OnProgPaymentYrEnd = SUM ( FD.OnProgPaymentYrEnd ),
	LearnSuppPaymentYrEnd = SUM ( FD.LearnSuppPaymentYrEnd ),
	AchCompPaymentYrEnd = SUM ( FD.AchCompPaymentYrEnd ),
	BalancePaymentYrEnd = SUM ( FD.BalancePaymentYrEnd ),
	EmpOutcomePayYrEnd = SUM ( FD.EmpOutcomePayYrEnd ),
	TotFundMinusALSYrEnd = 
		SUM ( COALESCE ( FD.OnProgPaymentYrEnd, 0 ) )
		+ SUM ( COALESCE ( FD.AchCompPaymentYrEnd, 0 ) )
		+ SUM ( COALESCE ( FD.BalancePaymentYrEnd, 0 ) )
		+ SUM ( COALESCE ( FD.EmpOutcomePayYrEnd, 0 ) )
		+ SUM ( COALESCE ( FD.OtherPaymentYrEnd, 0 ) ),
	TotFundYrEnd = SUM ( FD.TotFundYrEnd ),
	TotFundToTarget =
		CASE
			WHEN COALESCE ( SUM ( FD.Target ), 0 ) = 0 THEN NULL
			ELSE SUM ( COALESCE ( FD.TotFundYrEnd, 0 ) ) - SUM ( FD.Target )
		END,
	TotFundToTargetPer = 
		CASE
			WHEN COALESCE ( SUM ( FD.Target ), 0 ) = 0 THEN NULL
			ELSE ROUND ( ( ( 100 / SUM ( FD.Target ) ) * SUM ( COALESCE ( FD.TotFundYrEnd, 0 ) ) ) / 100, 4 )
		END,
	FutureAchievePaymentWeighted = SUM ( FD.FutureAchievePaymentWeighted ),
	FutureAchieveWeighting = FD.FutureAchieveWeighting,
    TotFundToTargetWeightedPer = 
		CASE
			WHEN COALESCE ( SUM ( FD.Target ), 0 ) = 0 THEN NULL
			ELSE ROUND ( ( ( 100 / SUM ( FD.Target ) ) * ( SUM ( COALESCE ( FD.TotFundYrEnd, 0 ) ) + SUM ( COALESCE ( FD.FutureAchievePaymentWeighted, 0 ) ) ) ) / 100, 4 )
		END,
	ALS1619FundingPercent = FD.ALS1619FundingPercent
FROM (

	--Ensure targets come through for teams not in FIS
	SELECT DISTINCT
		FD.AcademicYear,
		FD.ILRReturn,
		FD.ILRReturnDate,
		FD.SQLDatabase,
        FD.FundLineSummary,
		FD.FundLineDetail,
		Team = RTRIM ( TAR.TeamCode ) + ' -- Unknown --',
		SortOrder = 1,
		Target = TAR.Target,
		Learners = 0,
		Enrols = 0,
		OnProgPaymentYrEnd = 0,
		LearnSuppPaymentYrEnd = 0,
		AchCompPaymentYrEnd = 0,
		BalancePaymentYrEnd = 0,
		EmpOutcomePayYrEnd = 0,
		OtherPaymentYrEnd = 0,
		TotFundYrEnd = 0,
		TotFundToTarget = 0,
		TotFundToTargetPer = 0,
		FutureAchievePaymentWeighted = 0,
		FutureAchieveWeighting = FD.FutureAchieveWeighting,
		ALS1619FundingPercent = FD.ALS1619FundingPercent
	FROM FIS_FundingData FD
	INNER JOIN FIS_TeamTargets TAR
		ON TAR.AcademicYear = FD.AcademicYear
        AND TAR.ProviderNumber = FD.ProviderNumber
		AND TAR.Measure = 
			CASE
				WHEN FD.FundLineDetail = '16-19 Students (inc. High Needs)' THEN 'EFA_INCOME'
				WHEN FD.FundLineDetail = 'Advanced Learner Loan (ALL)' THEN 'ADVLOAN_INCOME'
				WHEN FD.FundLineDetail = 'AEB - Other Learning (non-procured)' THEN 'AEB_INCOME'
				WHEN FD.FundLineDetail = 'Higher Education' THEN 'HE_INCOME'
				WHEN FD.FundLineDetail = '16-18 Apprenticeship Levy' THEN 'APPS_1618_LEVY'
				WHEN FD.FundLineDetail = '16-18 Apprenticeship Non-Levy' THEN 'APPS_1618_NONLEVY'
				WHEN FD.FundLineDetail = '19+ Apprenticeship Levy' THEN 'APPS_19_LEVY'
				WHEN FD.FundLineDetail = '19+ Apprenticeship Non-Levy' THEN 'APPS_19_NONLEVY'
				WHEN FD.FundLineDetail = '16-18 Apprenticeship' THEN 'APPS_1618_LEGACY'
				WHEN FD.FundLineDetail = '19+ Apprenticeship' THEN 'APPS_19_LEGACY'
				ELSE NULL
			END
	LEFT JOIN (
		SELECT DISTINCT
			FD.FundLineDetail,
			FD.TeamCode
		FROM FIS_FundingData FD
		WHERE
			FD.AcademicYear = @AcademicYear
            AND FD.ProviderNumber = @Provider
			AND FD.ILRReturnDate = @ILRReturn
			AND (
				FD.IsFunded = 1
				OR FD.IsAdvLearnLoan = 1
			)
			AND FD.FundLine IN ( @FundLine )
			AND FD.TeamCode IN ( @Team )
			AND FD.FundLineDetail NOT IN ( 'Full Cost', 'None' )
	) NE
		ON NE.FundLineDetail = FD.FundLineDetail
		AND NE.TeamCode = TAR.TeamCode
	WHERE
		FD.AcademicYear = @AcademicYear
		AND FD.ILRReturnDate = @ILRReturn
		AND (
			FD.IsFunded = 1
			OR FD.IsAdvLearnLoan = 1
		)
		AND FD.FundLine IN ( @FundLine )
		AND FD.TeamCode IN ( @Team )
		AND NE.TeamCode IS NULL
		AND TAR.Target > 0
		AND FD.FundLineDetail NOT IN ( 'Full Cost', 'None' )

	UNION ALL

	SELECT
		FD.AcademicYear,
		FD.ILRReturn,
		FD.ILRReturnDate,
		FD.SQLDatabase,
        FD.FundLineSummary,
		FD.FundLineDetail,
		Team = RTRIM ( FD.TeamCode ) + ' - ' + FD.TeamName,
		SortOrder = MIN ( FD.SortOrder ),
		Target = MAX ( TAR.Target ),
		Learners = COUNT ( DISTINCT FD.LearnerRef ),
		Enrols = COUNT ( FD.LearnerRef ),
		OnProgPaymentYrEnd = SUM ( FD.OnProgPaymentYrEnd ),
		LearnSuppPaymentYrEnd = SUM ( FD.LearnSuppPaymentYrEnd ),
		AchCompPaymentYrEnd = SUM ( FD.AchCompPaymentYrEnd ),
		BalancePaymentYrEnd = SUM ( FD.BalancePaymentYrEnd ),
		EmpOutcomePayYrEnd = SUM ( FD.EmpOutcomePayYrEnd ),
		OtherPaymentYrEnd = SUM ( FD.OtherPaymentYrEnd ),
		TotFundYrEnd = SUM ( FD.TotFundYrEnd ),
		TotFundToTarget =
			CASE
				WHEN COALESCE ( SUM ( TAR.Target ), 0 ) = 0 THEN NULL
				ELSE SUM ( COALESCE ( FD.TotFundYrEnd, 0 ) ) - SUM ( TAR.Target )
			END,
		TotFundToTargetPer = 
			CASE
				WHEN COALESCE ( SUM ( TAR.Target ), 0 ) = 0 THEN NULL
				ELSE ROUND ( ( ( 100 / SUM ( TAR.Target ) ) * SUM ( COALESCE ( FD.TotFundYrEnd, 0 ) ) ) / 100, 4 )
			END,
		FutureAchievePaymentWeighted = SUM ( COALESCE ( FD.FutureAchievePaymentWeighted, 0 ) ),
		FutureAchieveWeighting = FD.FutureAchieveWeighting,
		ALS1619FundingPercent = FD.ALS1619FundingPercent
	FROM FIS_FundingData FD
	LEFT JOIN FIS_TeamTargets TAR
		ON TAR.TeamCode = FD.TeamCode
		AND TAR.AcademicYear = FD.AcademicYear
        AND TAR.ProviderNumber = FD.ProviderNumber
		AND TAR.Measure = 
			CASE
				WHEN FD.FundLineDetail = '16-19 Students (inc. High Needs)' THEN 'EFA_INCOME'
				WHEN FD.FundLineDetail = 'Advanced Learner Loan (ALL)' THEN 'ADVLOAN_INCOME'
				WHEN FD.FundLineDetail = 'AEB - Other Learning (non-procured)' THEN 'AEB_INCOME'
				WHEN FD.FundLineDetail = 'Higher Education' THEN 'HE_INCOME'
				WHEN FD.FundLineDetail = '16-18 Apprenticeship Levy' THEN 'APPS_1618_LEVY'
				WHEN FD.FundLineDetail = '16-18 Apprenticeship Non-Levy' THEN 'APPS_1618_NONLEVY'
				WHEN FD.FundLineDetail = '19+ Apprenticeship Levy' THEN 'APPS_19_LEVY'
				WHEN FD.FundLineDetail = '19+ Apprenticeship Non-Levy' THEN 'APPS_19_NONLEVY'
				WHEN FD.FundLineDetail = '16-18 Apprenticeship' THEN 'APPS_1618_LEGACY'
				WHEN FD.FundLineDetail = '19+ Apprenticeship' THEN 'APPS_19_LEGACY'
				ELSE NULL
			END
	WHERE
		FD.AcademicYear = @AcademicYear
        AND FD.ProviderNumber = @Provider
		AND FD.ILRReturnDate = @ILRReturn
		AND (
			FD.IsFunded = 1
			OR FD.IsAdvLearnLoan = 1
		)
		AND FD.FundLine IN ( @FundLine )
		AND FD.TeamCode IN ( @Team )
		AND FD.FundLineDetail NOT IN ( 'Full Cost', 'None' )
	GROUP BY
		FD.AcademicYear,
		FD.ILRReturn,
		FD.ILRReturnDate,
		FD.SQLDatabase,
        FD.FundLineSummary,
		FD.FundLineDetail,
		FD.FutureAchieveWeighting,
		FD.ALS1619FundingPercent,
		RTRIM ( FD.TeamCode ) + ' - ' + FD.TeamName
) FD
LEFT JOIN (
	SELECT
		FD.AcademicYear,
		FD.ILRReturn,
		FD.ILRReturnDate,
		FD.SQLDatabase,
        FD.FundLineSummary,
		FD.FundLineDetail,
		Learners = COUNT ( DISTINCT FD.LearnerRef ),
		Enrols = COUNT ( FD.LearnerRef )
	FROM FIS_FundingData FD
	LEFT JOIN FIS_TeamTargets TAR
		ON TAR.TeamCode = FD.TeamCode
		AND TAR.AcademicYear = FD.AcademicYear
        AND TAR.ProviderNumber = FD.ProviderNumber
		AND TAR.Measure = 
			CASE
				WHEN FD.FundLineDetail = '16-19 Students (inc. High Needs)' THEN 'EFA_INCOME'
				WHEN FD.FundLineDetail = 'Advanced Learner Loan (ALL)' THEN 'ADVLOAN_INCOME'
				WHEN FD.FundLineDetail = 'AEB - Other Learning (non-procured)' THEN 'AEB_INCOME'
				WHEN FD.FundLineDetail = 'Higher Education' THEN 'HE_INCOME'
				WHEN FD.FundLineDetail = '16-18 Apprenticeship Levy' THEN 'APPS_1618_LEVY'
				WHEN FD.FundLineDetail = '16-18 Apprenticeship Non-Levy' THEN 'APPS_1618_NONLEVY'
				WHEN FD.FundLineDetail = '19+ Apprenticeship Levy' THEN 'APPS_19_LEVY'
				WHEN FD.FundLineDetail = '19+ Apprenticeship Non-Levy' THEN 'APPS_19_NONLEVY'
				WHEN FD.FundLineDetail = '16-18 Apprenticeship' THEN 'APPS_1618_LEGACY'
				WHEN FD.FundLineDetail = '19+ Apprenticeship' THEN 'APPS_19_LEGACY'
				ELSE NULL
			END
	WHERE
		FD.AcademicYear = @AcademicYear
        AND FD.ProviderNumber = @Provider
		AND FD.ILRReturnDate = @ILRReturn
		AND (
			FD.IsFunded = 1
			OR FD.IsAdvLearnLoan = 1
		)
		AND FD.FundLine IN ( @FundLine )
		AND FD.TeamCode IN ( @Team )
		AND FD.FundLineDetail NOT IN ( 'Full Cost', 'None' )
	GROUP BY
		FD.AcademicYear,
		FD.ILRReturn,
		FD.ILRReturnDate,
		FD.SQLDatabase,
        FD.FundLineSummary,
		FD.FundLineDetail,
		FD.FutureAchieveWeighting
) CNT
	ON CNT.FundLineDetail = FD.FundLineDetail
GROUP BY
	FD.AcademicYear,
	FD.ILRReturn,
	FD.ILRReturnDate,
	FD.SQLDatabase,
    FD.FundLineSummary,
	FD.FundLineDetail,
	FD.FutureAchieveWeighting,
	FD.ALS1619FundingPercent
ORDER BY
    FD.FundLineSummary,
	FD.FundLineDetail